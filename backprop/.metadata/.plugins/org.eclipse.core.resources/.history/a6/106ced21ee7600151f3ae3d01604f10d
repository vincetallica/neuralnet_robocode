package NeuralNet;

import java.*;
import java.io.File;
import java.io.IOException;
import java.util.Random;

public class NeuralNet implements NeuralNetInterface {

	public double sigmoid (double x) {
		return (2.0/(1 + Math.pow(Math.E, (-1) * x))); 
	}

	public double customSigmoid (double x) {
		return ((argUpperB-argLowerB)/(1 + Math.pow(Math.E, (-1) * x)) - argLowerB);
	}

	public void initializeWeights() {
		for(int j=0; j < NUM_HIDDEN; j++ )
		{
			for (int k=0; k < NUM_OUTPUTS; k++) {
				weightsHO[k][j] = (new Random().nextDouble() - 0.5); // [-0.5, 0.5]
				System.out.println("Weight = " + weightsHO[k][j]);
			}
			for (int i = 0; i < NUM_INPUTS; i++) {
				weightsIH[i][j] = (new Random().nextDouble() - 0.5);
				System.out.println("IH Weight = " + weightsIH[i][j]);
			}
		}
	}
	public void zeroWeights() {
		
	}
	@Override
	public double outputFor(double[] X) {
		// TODO Auto-generated method stub
		return 0;
	}
	@Override
	public double train(double[] X, double argValue) {
		// TODO Auto-generated method stub
		return 0;
	}
	@Override
	public void save(File argFile) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void load(String argFileName) throws IOException {
		// TODO Auto-generated method stub
		
	}
}
